{"openapi": "3.1.0", "info": {"title": "Zivid Nova Plugin", "description": "Zivid Nova API", "contact": {"name": "Wandelbots GmbH", "url": "https://www.wandelbots.com/", "email": "engineering-platform@wandelbots.com"}, "version": "dev"}, "paths": {"/calibrations": {"get": {"tags": ["calibrations"], "summary": "Get Calibrations", "description": "Get all calibrations", "operationId": "get_calibrations_calibrations_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/Calibration"}, "title": "Response Get Calibrations Calibrations Get"}}}}}}, "delete": {"tags": ["calibrations"], "summary": "Delete Calibrations", "description": "Delete all calibrations", "operationId": "delete_calibrations_calibrations_delete", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}, "post": {"tags": ["calibrations"], "summary": "Start Calibration", "description": "Start a new calibration", "operationId": "start_calibration_calibrations_post", "parameters": [{"name": "serial_number", "in": "query", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Calibration"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/calibrations/{calibration_id}": {"get": {"tags": ["calibrations"], "summary": "Get Calibration", "description": "Get a calibration by ID", "operationId": "get_calibration_calibrations__calibration_id__get", "parameters": [{"name": "calibration_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Calibration Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Calibration"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["calibrations"], "summary": "Delete Calibration", "description": "Delete a calibration by ID", "operationId": "delete_calibration_calibrations__calibration_id__delete", "parameters": [{"name": "calibration_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Calibration Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/calibrations/{calibration_id}/poses": {"post": {"tags": ["calibrations"], "summary": "Add Calibration Pose", "description": "Add a calibration pose to a calibration", "operationId": "add_calibration_pose_calibrations__calibration_id__poses_post", "parameters": [{"name": "calibration_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Calibration Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Pose"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Calibration"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/calibrations/{calibration_id}/poses/{pose_id}": {"delete": {"tags": ["calibrations"], "summary": "Delete Calibration Pose", "description": "Delete a calibration pose from a calibration", "operationId": "delete_calibration_pose_calibrations__calibration_id__poses__pose_id__delete", "parameters": [{"name": "calibration_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Calibration Id"}}, {"name": "pose_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Pose Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Calibration"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/cameras": {"get": {"tags": ["cameras"], "summary": "Get Cameras", "description": "Get all cameras", "operationId": "get_cameras_cameras_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Camera"}, "type": "array", "title": "Response Get Cameras Cameras Get"}}}}}}}, "/cameras/{serial_number}": {"get": {"tags": ["cameras"], "summary": "Get Camera", "description": "Get a camera by serial number", "operationId": "get_camera_cameras__serial_number__get", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Camera"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["cameras"], "summary": "Disconnect Camera", "description": "Disconnects a camera by serial number", "operationId": "disconnect_camera_cameras__serial_number__delete", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/cameras/{serial_number}/frame": {"get": {"tags": ["cameras"], "summary": "Get Camera Frame", "description": "Get a frame from a camera in zdf format", "operationId": "get_camera_frame_cameras__serial_number__frame_get", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}, {"name": "down_sample_factor", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/DownsampleFactor", "default": 1}}, {"name": "preset", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/CaptureSettingsPreset", "default": "auto"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}, "application/octet-stream": {}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/cameras/{serial_number}/frame/pointcloud": {"get": {"tags": ["cameras"], "summary": "Get Camera Frame Pointcloud", "description": "Get a point cloud from a camera in ply format.\nPoint cloud will contain positions, colors and normals.\nAny points with NaN (position) values will be removed.", "operationId": "get_camera_frame_pointcloud_cameras__serial_number__frame_pointcloud_get", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}, {"name": "down_sample_factor", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/DownsampleFactor", "default": 1}}, {"name": "preset", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/CaptureSettingsPreset", "default": "auto"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}, "application/octet-stream": {}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/cameras/{serial_number}/frame/color-image": {"get": {"tags": ["cameras"], "summary": "Get Camera Frame Color Image", "description": "Get a color image from a camera", "operationId": "get_camera_frame_color_image_cameras__serial_number__frame_color_image_get", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}, {"name": "down_sample_factor", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/DownsampleFactor", "default": 1}}, {"name": "preset", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/CaptureSettingsPreset", "default": "auto"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}, "image/png": {}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/cameras/{serial_number}/frame/depth-image": {"get": {"tags": ["cameras"], "summary": "Get Camera Frame Depth Image", "description": "Get a depth image from a camera", "operationId": "get_camera_frame_depth_image_cameras__serial_number__frame_depth_image_get", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}, {"name": "down_sample_factor", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/DownsampleFactor", "default": 1}}, {"name": "preset", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/CaptureSettingsPreset", "default": "auto"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}, "image/png": {}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/cameras/{serial_number}/frame/board-pose": {"get": {"tags": ["cameras"], "summary": "Get Camera Frame Board Pose", "description": "Get the pose of the calibration board in the camera frame", "operationId": "get_camera_frame_board_pose_cameras__serial_number__frame_board_pose_get", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Pose"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/cameras/{serial_number}/frame2d": {"get": {"tags": ["cameras"], "summary": "Get Camera Frame2D Color", "description": "Get a color image from a camera", "operationId": "get_camera_frame2d_color_cameras__serial_number__frame2d_get", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}, "image/png": {}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/cameras/{serial_number}/firmware/up-to-date": {"get": {"tags": ["cameras"], "summary": "Get Camera Firmware Up To Date", "description": "Check if the camera firmware is up to date", "operationId": "get_camera_firmware_up_to_date_cameras__serial_number__firmware_up_to_date_get", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "boolean", "title": "Response Get Camera Firmware Up To Date Cameras  Serial Number  Firmware Up To Date Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/cameras/{serial_number}/firmware/update": {"post": {"tags": ["cameras"], "summary": "Update Camera Firmware", "description": "Update the camera firmware if necessary. Also performs downgrades.", "operationId": "update_camera_firmware_cameras__serial_number__firmware_update_post", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/infield-correction": {"get": {"tags": ["infield-correction"], "summary": "Read", "description": "the read function will return the last time an infield correction was written to the camera.", "operationId": "read_infield_correction_get", "parameters": [{"name": "serial_number", "in": "query", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Read Infield Correction Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["infield-correction"], "summary": "Reset", "description": "Using reset will remove any infield correction that has been applied in previous correct instances.\nIt is not required to do a reset before doing a new infield correction.", "operationId": "reset_infield_correction_delete", "parameters": [{"name": "serial_number", "in": "query", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/infield-correction/verification": {"get": {"tags": ["infield-correction"], "summary": "Verify", "description": "This function uses a single capture to determine the local dimension trueness error\nof the point cloud where the Zivid calibration board is placed.", "operationId": "verify_infield_correction_verification_get", "parameters": [{"name": "serial_number", "in": "query", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CameraVerification"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/infield-correction/correction": {"get": {"tags": ["infield-correction"], "summary": "List Correction", "description": "List all correction run IDs for the given serial number.", "operationId": "list_correction_infield_correction_correction_get", "parameters": [{"name": "serial_number", "in": "query", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "string"}, "title": "Response List Correction Infield Correction Correction Get"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["infield-correction"], "summary": "Start Correction", "description": "Will start a new correction run, by collection a dataset under the returned ID.", "operationId": "start_correction_infield_correction_correction_post", "parameters": [{"name": "serial_number", "in": "query", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Start Correction Infield Correction Correction Post"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/infield-correction/correction/{correction_id}": {"post": {"tags": ["infield-correction"], "summary": "Add Correction Dataset", "description": "Add a new dataset to the correction run.", "operationId": "add_correction_dataset_infield_correction_correction__correction_id__post", "parameters": [{"name": "correction_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Correction Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddCorrectionOffsetResp"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["infield-correction"], "summary": "Write Correction Dataset", "description": "Calculates the correction based on the current dataset for the run. Clears the previous dataset.", "operationId": "write_correction_dataset_infield_correction_correction__correction_id__put", "parameters": [{"name": "correction_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Correction Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["infield-correction"], "summary": "Delete Correction Dataset", "description": "Deletes the correction dataset for this run.", "operationId": "delete_correction_dataset_infield_correction_correction__correction_id__delete", "parameters": [{"name": "correction_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Correction Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/projectors/{serial_number}": {"post": {"tags": ["projectors"], "summary": "Project Test Image", "description": "Starts projection of a testimage for calibration board adjustment.\nStops the previous projection.", "operationId": "project_test_image_projectors__serial_number__post", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["projectors"], "summary": "Delete Projection", "description": "Stops the projection for the given camera.", "operationId": "delete_projection_projectors__serial_number__delete", "parameters": [{"name": "serial_number", "in": "path", "required": true, "schema": {"type": "string", "title": "Serial Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/": {"get": {"summary": "Root", "operationId": "root__get", "responses": {"200": {"description": "Successful Response", "content": {"text/html": {"schema": {"type": "string"}}}}}}}, "/version": {"get": {"summary": "Get Version", "operationId": "get_version_version_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/app_icon.png": {"get": {"summary": "Services the app icon for the homescreen", "operationId": "get_app_icon_app_icon_png_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}}, "components": {"schemas": {"AddCorrectionOffsetResp": {"properties": {"dimension_accuracy": {"type": "number", "title": "Dimension Accuracy"}, "dataset_size": {"type": "integer", "title": "Dataset Size"}, "z_min": {"type": "number", "title": "Z Min"}, "z_max": {"type": "number", "title": "Z Max"}}, "type": "object", "required": ["dimension_accuracy", "dataset_size", "z_min", "z_max"], "title": "AddCorrectionOffsetResp", "description": "AddCorrectionOffsetResp data structure with pydantic serialization"}, "Calibration": {"properties": {"id": {"type": "string", "title": "Id"}, "serial_number": {"type": "string", "title": "Serial Number"}, "poses": {"items": {"$ref": "#/components/schemas/Pose"}, "type": "array", "title": "Poses"}, "residuals": {"anyOf": [{"items": {"$ref": "#/components/schemas/CalibrationResidual"}, "type": "array"}, {"type": "null"}], "title": "Residuals"}, "hand_eye_calibration": {"anyOf": [{"$ref": "#/components/schemas/Pose"}, {"type": "null"}]}}, "type": "object", "required": ["id", "serial_number", "poses", "residuals", "hand_eye_calibration"], "title": "Calibration", "description": "Calibration data structure with pydantic serialization"}, "CalibrationResidual": {"properties": {"translation": {"type": "number", "title": "Translation"}, "rotation": {"type": "number", "title": "Rotation"}}, "type": "object", "required": ["translation", "rotation"], "title": "CalibrationResidual", "description": "Calibration residual data structure with pydantic serialization"}, "Camera": {"properties": {"serial_number": {"type": "string", "title": "Serial Number"}, "model": {"type": "string", "title": "Model"}, "firmware_version": {"type": "string", "title": "Firmware Version"}}, "type": "object", "required": ["serial_number", "model", "firmware_version"], "title": "Camera", "description": "Camera data structure with pydantic serialization"}, "CameraVerification": {"properties": {"local_dimension_trueness": {"type": "number", "title": "Local Dimension Trueness"}, "position": {"items": {"type": "number"}, "type": "array", "title": "Position"}}, "type": "object", "required": ["local_dimension_trueness", "position"], "title": "CameraVerification", "description": "CameraVerification"}, "CaptureSettingsPreset": {"type": "string", "enum": ["auto", "diffuse", "semispecular", "specular"], "title": "CaptureSettingsPreset", "description": "Different capture settings presets"}, "DownsampleFactor": {"type": "integer", "enum": [1, 2, 3, 4], "title": "DownsampleFactor", "description": "Downsample factor for pointclouds"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "Pose": {"properties": {"position": {"prefixItems": [{"type": "number"}, {"type": "number"}, {"type": "number"}], "type": "array", "maxItems": 3, "minItems": 3, "title": "Position"}, "orientation": {"prefixItems": [{"type": "number"}, {"type": "number"}, {"type": "number"}], "type": "array", "maxItems": 3, "minItems": 3, "title": "Orientation"}}, "type": "object", "required": ["position", "orientation"], "title": "Pose", "description": "Pose with position and orientation. Orientation is represented as a rotation vector"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}